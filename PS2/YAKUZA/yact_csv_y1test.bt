//------------------------------------------------
//--- 010 Editor v14.0 Binary Template
//
//      File: yact_csv_y1.bt
//   Authors: Hamzaxx369
//   Version: 
//   Purpose: Parse Y1 CSV
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
#include "../../Common/includes/include.h"
#include "yact_csv_y1_include.bt"
LittleEndian();
typedef struct
{
    
    SetRandomBackColor();
    u32 CSV_Count;
    char PAD1[12]<hidden=true>;
    u32 YACT1_Pointer;
    u32 YACT1_Size;
    u32 YACT_Number;
    char YACT1_String[4];
    u32 YACT2_Pointer;
    u32 YACT2_Size;
    u32 YACT_Number;
    char YACT2_String[4];
    
}header;
header Header; 
typedef struct
{
    
    
    SetRandomBackColor();
    u32 First_Entry_Pointer;
    u32 Entry_Count;
    char PAD2[8]<hidden=true>;
    
    local int csv;
    for (csv=0;csv<Entry_Count;csv++){
        typedef struct
        {
            
            local int EntryStart = FTell();
            typedef struct
            {
                typedef struct
                {
                        
                    float Float1;
                    float Float2;
                    float Floot3;
                    u32 PAD3<hidden=true>;
                    float Float4;
                    float Float5;
                    float Float6;
                    u32 PAD3<hidden=true>;
                    
                }floats;
                floats Floats;
                byte Padding[32];
                u32 YactID;
                u32 EntrySize;
                u32 Chunk1Pointer;
                u32 Chunk1Count;
                u32 Cn<name ="Conditions Pointer?">;
                byte Unknown[60];
              
                FSeek(Header.Chunk1Pointer+EntryStart);
            
                typedef struct
                {
                    local int c1;
                    for (c1=0;c1<Header.Chunk1Count;c1++){
                    u32 UNK0;
                    u32 UNK1;
                    u32 UNK2;
                    u32 Pointer0;
                    u32 UNK3;
                    u32 UNK4;
                    u32 UNK5;
                    u32 UNK6;
                    
                    }
                }chunk1;
                chunk1 Chunk1<name="Camera Pointers">;
            }enthdr;
            enthdr Header;
            
            FSeek(Header.Cn+EntryStart);
            typedef struct
            {
                byte Unknown[16];
                END EC<name="Enemy After Yact">;
                u32 Padding;
                END PC<name="Player After Yact">;
                
            }cnd;
            cnd Conditions<name="Conditions?">;
            
            
            FSeek(Header.Chunk1.Pointer0[0]+EntryStart);
            typedef struct
            {
                local int cf;
                for (cf=0;cf<Header.Chunk1Count;cf++){
                typedef struct
                {
                    u32 Empty;
                    float FrameStart;
                    float FrameEnd;
                    float Speed;
                    u32 ParentID;
                    byte Unknown1[12];
                }CamF;
                CamF CameraProperties;
                }
                while (FTell() < Header.EntrySize+EntryStart){
                typedef struct
                {
                    u32 Empty;
                    float FrameStart;
                    float FrameEnd;
                    float Speed;
                    u32 ParentID;
                    byte Unknown1[12];
                }AnimF;
                AnimF AnimationProperties;
                }
           }prp;
           prp Properties;
            
            
            
            
                
            
        }entry;
        entry YACT_File<name = Header.YactID>;
    }
        

        
        
   
    
        
    
    
    
}yact1;
yact1 YACT1;




typedef struct
{
    
    
    SetRandomBackColor();
    u32 First_Entry_Pointer;
    u32 Entry_Count;
    char PAD2[8]<hidden=true>;
    
    local int csv;
    for (csv=0;csv<Entry_Count;csv++){
        typedef struct
        {
            
            local int EntryStart = FTell();
            typedef struct
            {
                typedef struct
                {
                        
                    float Float1;
                    float Float2;
                    float Floot3;
                    u32 PAD3<hidden=true>;
                    float Float4;
                    float Float5;
                    float Float6;
                    u32 PAD3<hidden=true>;
                    
                }floats2;
                floats2 Floats;
                byte Padding[32];
                u32 YactID;
                u32 EntrySize;
                u32 Chunk1Pointer;
                u32 Chunk1Count;
                u32 Cn<name ="Conditions Pointer?">;
                byte Unknown[60];
              
                FSeek(Header.Chunk1Pointer+EntryStart);
            
                typedef struct
                {
                    local int c1;
                    for (c1=0;c1<Header.Chunk1Count;c1++){
                    u32 UNK0;
                    u32 UNK1;
                    u32 UNK2;
                    u32 Pointer0;
                    u32 UNK3;
                    u32 UNK4;
                    u32 UNK5;
                    u32 UNK6;
                    
                    }
                }chunk2;
                chunk2 Chunk1<name="Camera Pointers">;
            }enthdr2;
            enthdr2 Header;
            
            FSeek(Header.Cn+EntryStart);
            typedef struct
            {
                byte Unknown[16];
                END EC<name="Enemy After Yact">;
                u32 Padding;
                END PC<name="Player After Yact">;
                
            }cnd2;
            cnd2 Conditions<name="Conditions?">;
            
            
            FSeek(Header.Chunk1.Pointer0[0]+EntryStart);
            typedef struct
            {
                local int cf;
                for (cf=0;cf<Header.Chunk1Count;cf++){
                typedef struct
                {
                    u32 Empty;
                    float FrameStart;
                    float FrameEnd;
                    float Speed;
                    u32 ParentID;
                    byte Unknown1[12];
                }CamF2;
                CamF2 CameraProperties;
                }
                while (FTell() < Header.EntrySize+EntryStart){
                typedef struct
                {
                    u32 Empty;
                    float FrameStart;
                    float FrameEnd;
                    float Speed;
                    u32 ParentID;
                    byte Unknown1[12];
                }AnimF2;
                AnimF2 AnimationProperties;
                }
           }prp2;
           prp2 Properties;
            
            
            
            
                
            
        }entry2;
        entry2 YACT_File<name = Header.YactID>;
    }
        

        
        
   
    
        
    
    
    
}yact2;
yact2 YACT2;


