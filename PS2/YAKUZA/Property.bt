//------------------------------------------------
//--- 010 Editor v14.0 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
#include "../../Common/includes/include.h"
typedef struct
{
    u32 PropertyOffset;
    u32 PropertyCount;
    u32 PibOffset;
    u32 PibCount;
    u32 FileSize;
    byte Padding[12];
}hdr;
hdr Header<bgcolor = cGreen>;
typedef struct
{
    local int pr;
    for (pr=0;pr<Header.PropertyCount;pr++){
        u32 prptype<hidden=true>;
        FSkip(-4);
        if (prptype==7){
            typedef struct
            {
                
                u32 Unknown0<name = "Property Type">;
                float F1<name="Frame Start">;
                float F2<name="Frame End">;
                float F3<name="Might Be Speed">;
                byte Unknown[16];
                
                
            }prp0;
            prp0 Property0<bgcolor = cRed,name = "Projectile Damage">;
        }
        else if (prptype==3){
            typedef struct
            {
                
                u32 Unknown0<name = "Property Type">;
                float F1<name="Frame Start">;
                float F2<name="Frame End">;
                float F3<name="Might Be Speed">;
                u32 Unknown1;
                u32 Dmg <name = "Damage Type Flag">;
                byte Unknown[8];
                
                
            }prp1;
            prp1 Property1<bgcolor = cRed,name = "Unarmed Damage">; 
        }
        else{
            typedef struct
            {
                
                u32 Unknown0<name = "Property Type">;
                float F1<name="Frame Start">;
                float F2<name="Frame End">;
                float F3<name="Might Be Speed">;
                byte Unknown[16];
                
                
            }prpunk;
            prpunk Propertyunk<bgcolor = cRed,name = "Undocumented Property">;
            }
            
              
    }
}properties1;
properties1 Properties1<name="Properties 1">;
typedef struct
{
    local int pb;
    for (pb=0;pb<Header.PibCount;pb++){
        
        
        typedef struct
        {      
            u32 Flag<name="Flag??">;
            float F1<name="Frame Start">;
            float F2<name="Frame End">;
            float F3<name="Might Be Speed">;
            u32 PRP<name = "Bone Number">;
            byte UnknownData[40];
            u32 ID<name = "Pib ID">;
            typedef struct
            {    
                u8 Blue;
                u8 Green;
                u8 Red;
                u8 Alpha;
            }rgb1;
            rgb1 RGB1<name="RGB 1",bgcolor = cAqua>;
            typedef struct
            {    
                u8 Blue;
                u8 Green;
                u8 Red;
                u8 Alpha;
            }rgb2;
            rgb2 RGB2<name="RGB 2",bgcolor = cGray>;
            float Unknown;
            u32 Unknown;
            byte Padding[8];
            u32 Unknown;
            u32 Unknown<name="Could be a flag">;
            
        }pib;
        pib PIB<bgcolor = cBlue>;
    }
        
    
}properties2;
properties2 Properties2<name = "Properties 2">;