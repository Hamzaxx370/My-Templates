//------------------------------------------------
//--- 010 Editor v14.0 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
#include "../../Common/includes/include.h"
#include "yact1include.bt"
LittleEndian();
typedef struct
{
    u32 YactSize<name = "File Size">;
    u32 EffectPointers<name = "Effect Table">;
    u32 EffectCount<name = "Effect Count">;
    u32 Unknown1Pointers<name = "Unknown Chunk 1 Table">;
    u32 Unknown1Count<name = "Unknown Chunk 1 Count">;
    u32 Unknown2Pointers<name = "Unknown Chunk 2 Table">;
    u32 Unknown2Count<name = "Unknown Chunk 2 Count">;
    u32 MTBWPointers<name = "MTBW Table">;
    u32 MTBWCount<name = "MTBW Count">;
    byte UNK0[8]<hidden=true>;
    u32 OMTPointers<name = "OMT Table">;
    u32 OMTCount<name = "OMT Count">;
    u32 TableEnd<name = "End Of Table">;
    byte UNK1[8]<hidden=true>;
    
    
}hdr;
hdr Header;

FSeek(Header.EffectPointers);

typedef struct
{
    
    local int e;
    for (e=0;e<Header.EffectCount;e++){
        
        u32 EFFECTPOINTER<name = "Effect Pointer">;
   
    }
    FSeek(Header.Unknown1Pointers);
    local int eu1;
    for (eu1=0;eu1<Header.Unknown1Count;eu1++){
        
        u32 UNK1POINTER<name = "Unknown Chunk 1 Pointer">;
    }
    FSeek(Header.Unknown2Pointers);
    local int eu2;
    for (eu2=0;eu2<Header.Unknown2Count;eu2++){
        
        u32 UNK2POINTER<name = "Unknown Chunk 2 Pointer">;
    }
    FSeek(Header.MTBWPointers);
    local int m;
    for (m=0;m<Header.MTBWCount;m++){
        
        u32 MTBWPOINTER<name = "MTBW Pointer">;
    }
    FSeek(Header.OMTPointers);
    local int o;
    for (o=0;o<Header.OMTCount;o++){
        
        u32 OMTPOINTER<name = "OMT Pointer">;
    }
    
}ptr;
ptr Pointers;
FSeek(Pointers.EFFECTPOINTER[0]);
typedef struct
{
    
    local int ef;
    for (ef=0;ef<Header.EffectCount;ef++){
        
        
        
        FSeek(Pointers.EFFECTPOINTER[ef]+44);
        u32 DataType<hidden=true>;
        
        
        FSeek(Pointers.EFFECTPOINTER[ef]);  
        if (DataType==1){
            
            typedef struct{
                
                u32 ParentID;
                float f1<name = "Frame Start">;
                float f2<name = "Frame End">;
                float f3<name = "Speed">;
                FSeek(Pointers.EFFECTPOINTER[ef]+16);
                u32 Unknown;
                byte P1[16]<name = "Unknown">;
                u8 Blue;
                u8 Green;
                u8 Red;
                u8 Opacity;
                byte P2[20]<name = "Unknown">;
                u32 pbb<name = "PIB ID">;
                byte P3[32]<name = "Unknown">;
            }pib;
            pib PIB;
        }
        else if (DataType==20){
            
            typedef struct
            {
                
                u32 ParentID;
                float f1<name = "Frame Start">;
                float f2<name = "Frame End">;
                float f3<name = "Speed">;
                FSeek(Pointers.EFFECTPOINTER[ef]+16);
                u32 Unknown;
                byte Padding[36]<name = "Unknown">;
                float f1<name = "Unknown">;
                SDNAMES cnt<name = "Container ID">;
                u16 vc <name = "Voice Number">;
                
                
                
                
                byte P8[32]<name = "Unknown">;
            }sd;
            sd SD<name= "Sound Cue">;
        }
        else if (DataType==21){
            
            typedef struct
            {
                
                u32 ParentID;
                float f1<name = "Frame Start">;
                float f2<name = "Frame End">;
                float f3<name = "Speed">;
                FSeek(Pointers.EFFECTPOINTER[ef]+16);
                u32 Unknown;
                byte Padding[36]<name = "Unknown">;
                float f1<name = "Unknown">;
                SDNAMES cnt<name = "Container ID">;
                
                u16 vc <name = "Voice Number">;
                
                
                
                
                byte P8[32]<name = "Unknown">;
            }sd1;
            sd1 SD<name= "Sound Cue">;
        }
        else if (DataType==4){
            typedef struct
            {
                
                u32 ParentID;
                float f1<name = "Frame Start">;
                float f2<name = "Frame End">;
                float f3<name = "Speed">;
                FSeek(Pointers.EFFECTPOINTER[ef]+16);
                byte p9[60]<name = "Unknown">;
                u32 dmg <name = "Damage Value">;
                byte p10[16]<name = "Unknown">;
            }dmg;
            dmg Damage;
        }
        else if (DataType==0){
            
            
            typedef struct
            {
                u32 ParentID;
                float f1<name = "Frame Start">;
                float f2<name = "Frame End">;
                float f3<name = "Speed">;
                FSeek(Pointers.EFFECTPOINTER[ef]+16);
                u32 Unknown;
                byte P1[32]<name = "Unknown">;
                u8 Blue;
                u8 Green;
                u8 Red;
                u8 Opacity;
                byte P2[40]<name = "Unknown">;
                
                
            }Scr;
            Scr Screen<name = "Either PIB or Screen Effect">;
        }
        else{
            typedef struct{
                
                byte Unknown[96];
            }Unk;
            Unk Unknown;
        }
        
        
    "test";
    }
}efcts;
efcts Effects;
FSeek(Pointers.UNK1POINTER[0]);
typedef struct
{
    local int euc1;
    for (euc1=0;euc1<Header.Unknown1Count;euc1++){
        
        typedef struct
        {
            float f1;
            float f2;
            float f3;
            u32 i1;
            float f4;
            float f5;
            float f6;
            u32 i2;
        }unknown1;
        unknown1 Unknown;
    }
}unk1;
unk1 UNK1<name = "Unknown Chunk 1">;
FSeek(Pointers.UNK2POINTER[0]);
typedef struct
{
    local int euc2;
    for (euc2=0;euc2<Header.Unknown2Count;euc2++){
        
        typedef struct
        {
            float f1;
            float f2;
            float f3;
            u32 i1;
            float f4;
            float f5;
            float f6;
            u32 i2;
        }unknown2;
        unknown2 Unknown;
    }
}unk2;
unk2 UNK2<name = "Unknown Chunk 2">;
FSeek(Pointers.MTBWPOINTER[0]);
typedef struct
{
    local int c;
    for (c=0;c<Header.MTBWCount;c++){
        typedef struct
        {
            FSeek(Pointers.MTBWPOINTER[c]);
            u32 MTBWOFFSET;
            u32 MTBWSIZE;
            FSeek(MTBWOFFSET);
            byte MTBW[MTBWSIZE];
        }mtbw;
        mtbw CAM<name = "MTBW Camera File">;
    }
    
    
    
}mtbws;
mtbws MTBWs;
typedef struct
{
    local int a;
    for (a=0;a<Header.OMTCount;a++){
        typedef struct
        {
            FSeek(Pointers.OMTPOINTER[a]);
            u32 OMTOFFSET;
            u32 OMTSIZE;
            FSeek(OMTOFFSET);
            byte OMT[OMTSIZE];
        }omt;
        omt OMT<name = "OMT Animation File">;
    }
    
    
    
}omts;
omts OMTs;