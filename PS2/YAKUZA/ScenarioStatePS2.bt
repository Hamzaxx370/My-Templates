//------------------------------------------------
//--- 010 Editor v14.0 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
#include "../../Common/includes/include.h"
LittleEndian();
typedef struct
{
    
    u64 Identfier;
    u32 Count0;
    u32 Offset0;
    u32 Count1;
    u32 Offset1;
    u32 Count2;
    u32 Offset2;
    
}hdr;
hdr Header;

FSeek(Header.Offset0);

typedef struct
{
    local int e;
    for (e=0;e<Header.Count0;e++){
        typedef struct
        {
            u32 TextStart;
            u32 NumberOfPointers;
            u32 Pointer;
            u32 TableIndex;
            local int returnpos = FTell();
            FSeek(Pointer);
            local int f;
            for (f=0;f<NumberOfPointers;f++){
                u32 scnPointer;
            }
            FSeek(returnpos);
        }ptr;
        ptr Pointer;
    }
    
    
}section1;
section1 Section1<name = "Scenario 1 Pointers">;

FSeek(Header.Offset1);

typedef struct
{
    local int f;
    for  (f=0;f<Header.Count1;f++){
        u32 Pointer;
    }

}section2;
section2 Section2<name = "Scenario 2 Pointers">;

typedef struct
{
    local int e;
    for  (e=0;e<Header.Count0;e++){
        FSeek(Section1.Pointer[e].TextStart);
        typedef struct
        {
            
            char ScenarioName[Section1.Pointer[e].scnPointer[0]-Section1.Pointer[e].TextStart];
            
            local int f;
            for (f=0;f<Section1.Pointer[e].NumberOfPointers;f++){
                
                FSeek(Section1.Pointer[e].scnPointer[f]);
                typedef struct
                {
                    local int text = 0;
                    local int text1 = FTell();
                    while (true){
                        u8 zero<hidden = true>;
                        if (zero == 0x00){
                            break;
                        }
                        else{
                            text++;
                        }
                    }
                    FSeek(text1);
                    char Text[text];
                
                
                }scnrs;
                scnrs Texts;
            }
            
            
        }scn;
        scn Scenario<name = ScenarioName>;
        
        
    }
    
}s1;
s1 s1files<name = "Scenario 1 Files">;



typedef struct
{
    
    local int e;
    for  (e=0;e<Header.Count1;e++){
        FSeek(Section2.Pointer[e]);
        typedef struct
        {
            local int text = 0;
            local int text1 = FTell();
            while (true){
                u8 zero<hidden = true>;
                if (zero == 0x00){
                    break;
                }
                else{
                    text++;
                }
            }
            FSeek(text1);
            char Text[text];
            
            
        }scn1;
        scn1 Scenario1<name = Text>;
    }
    
    
    
}s2;
s2 s2files<name = "Scenario 2 Files">;